security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
       App\Entity\Member:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_USER, ROLE_ADMIN ]

    providers:
        user_provider:
            entity:
                class: App\Entity\Member
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            http_basic: ~
            provider: user_provider
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
                default_target_path: api
            logout:
                path: /logout
                target: /
            access_denied_url: api

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin, roles: [ROLE_ADMIN, IS_AUTHENTICATED_REMEMBERED] }
         - { path: ^/admin/users , roles: ROLE_SUPER_ADMIN }
         - { path: ^/profile, roles: ROLE_USER }
